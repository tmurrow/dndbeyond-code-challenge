@import '../_variables';
@import '../_mixins';

.talent-calculator {
  @include flexbox-center;
  flex-direction: row;
  height: 100%;

  @media (max-width: $breakpoint-medium) {
    flex-direction: column-reverse;
  }

  .points {
    background-color: rgba($site-color-dark,.4);
    border: 1px solid rgba($site-color-grey, .25);
    font-size: 1.5rem;
    padding: 1rem 1.75rem;
    margin: .5rem 4rem;

    @media (max-width: $breakpoint-large) {
      font-size: 1.2rem;
    }

    @media (max-width: $breakpoint-medium) {
      font-size: 1rem;
      margin: 0rem;
      margin-bottom: 1rem;
    }

    &__label {
      color: $site-color-blue;
      font-weight: lighter;
    }
  }

  .talent-tree {
    @include flexbox-center;
    flex-direction: column;
    min-width: 50%;
    height: 100%;

    @media (max-width: $breakpoint-medium) {
      flex-direction: row;
      height: 100%;
    }

    .talent-path {
      @include flexbox-center;
      justify-content: space-between;
      width: 100%;
      height: 100%;
      margin: 1.5rem 0rem;

      @media (max-width: $breakpoint-medium) {
        flex-direction: column;
        height: 60vh;
        margin: 0rem 1.5rem;
      }

      &__title {
        font-size: .75rem;

        @media (max-width: $breakpoint-medium) {
          font-size: .6rem;
        }
      }

      // Talents; since we want the talent icons to have a gradient border, set the talent
      // button background to the gradient and make the dimensions slightly larger
      // to appear as if there's a border around the icon
      .talent {
        @include talent-box-shadow($site-color-dark);
        @include talent-gradient-background($site-color-light-grey, $site-color-grey);
        border: none;
        outline: none;
        position: relative;
        min-height: $icon-size + $icon-border-width;
        width: $icon-size + $icon-border-width;

        &:hover {
          cursor: pointer;
        }

        // Links between all talents
        &:not(:nth-child(2)) {
          &::before {
            @include talent-link;
          }

          // Link between active talents and next inactive talent
          // Transition between inactive connection and active connection state
          &::after {
            @include talent-link;
            background-color: rgba($site-color-grey, .5);
            border-color: rgba($site-color-grey, 1);
            width: 0rem;
            transition: width 0.15s ease-out;

            @media (max-width: $breakpoint-medium) {
              height: 0rem;
              transition: height 0.15s ease-out;
            }
          }
        }

        // Active, or selected, talent
        &--active {
          @include talent-box-shadow($site-color-light);
          @include talent-gradient-background($site-color-blue, $site-color-dark-blue);

          // Links between active talents
          &:not(:nth-child(2))::after {
            @include talent-link;
            background-color: rgba($site-color-grey, .5);
            border-color: rgba($site-color-grey, 1);
          }
        }

        // Talent icons; use a negative margin to position the icon in the middle of the talent button
        [class^="icon-"] {
          background-image: $icon-file;
          background-repeat: no-repeat;
          position: absolute;
          height: $icon-size;
          width: $icon-size;
          margin-top: ($icon-size/-2);
          margin-left: ($icon-size/-2);
        }

        // Dynamically get background of each icon
        @each $icon in $icons {
          $icon-index: index($icons, $icon)-1;
          $icon-position: (-50 * $icon-index) * 1px;
          .icon-#{$icon} {
            background-position: $icon-position -50px;
          }

          // Use different x position if talent is active or being hovered over
          &--active .icon-#{$icon},
          &:hover .icon-#{$icon} {
            background-position: $icon-position 0px;
          }
        }
      }
    }
  }
}
